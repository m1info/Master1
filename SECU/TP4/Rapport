Rapport SECU TP4 à rendre pour le 04/11/15
Sous la forme IntroSecu_NomX_NomY.pdf
A julien.lolive@inria.fr


Analyse du code source et vulnérabilités: 1 faille trouvée

	- mymodel.php
		- Déclare la classe mysqli_ en tant que Model général de l'application.
		- Celui ci instancie un objet mysqli et exécute des requêtes via la fonction mysqli::query()
		sans faire de vérification sur la requête donnée.

	- classes/Commentaires.php
		- Utilise la classe mysqli_ et en instancie un objet.
		- La fonction d'insertion ne vérifie pas ses entrées et exécute mysqli_::query() avec les valeurs non vérifiées.
		Or, plus bas on ne vérifie pas non plus.

	- classes/ClasseUsers.php
		- Utilitaire (Model) pour les utilisateurs.
		- Aucune vérification des entrées pour les requêtes SQL.

	- admin/verif.php
		- Requête de connexion récupère les valeurs du POST, valeurs qui ne sont pas vérifiées.
		- La requête pour récupérer un utilisateur ne vérifie pas non plus les valeurs rentrées.
		- Nous pouvons outrepasser la vérification en utilisant une injection sql
			- Soit avec le login en tant que '" or "a"="a"; #' ce qui nous permet de commenter tout le reste ce qui nous donne (? OR 1 => true)
			- Soit avec le mdp en tant que '" or "a"="a' ce qui nous renverra true pour toute la requête (? AND ? OR 1 => true)

	- admin/welcome.php
		- L'identifiant de l'utilisateur est récupéré par une requête GET ($_GET['id'])
		Aucune vérification n'est effectuée sur la valeur retournée
		En changeant simplement la valeur dans l'URL on peut se connecter en tant que utilisateur de l'id entré